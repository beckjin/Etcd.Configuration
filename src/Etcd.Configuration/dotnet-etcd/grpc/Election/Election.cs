// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: election.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace V3Electionpb {

  /// <summary>Holder for reflection information generated from election.proto</summary>
  public static partial class ElectionReflection {

    #region Descriptor
    /// <summary>File descriptor for election.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ElectionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5lbGVjdGlvbi5wcm90bxIMdjNlbGVjdGlvbnBiGglycGMucHJvdG8aCGt2",
            "LnByb3RvIj0KD0NhbXBhaWduUmVxdWVzdBIMCgRuYW1lGAEgASgMEg0KBWxl",
            "YXNlGAIgASgDEg0KBXZhbHVlGAMgASgMImkKEENhbXBhaWduUmVzcG9uc2US",
            "LAoGaGVhZGVyGAEgASgLMhwuZXRjZHNlcnZlcnBiLlJlc3BvbnNlSGVhZGVy",
            "EicKBmxlYWRlchgCIAEoCzIXLnYzZWxlY3Rpb25wYi5MZWFkZXJLZXkiQgoJ",
            "TGVhZGVyS2V5EgwKBG5hbWUYASABKAwSCwoDa2V5GAIgASgMEgsKA3JldhgD",
            "IAEoAxINCgVsZWFzZRgEIAEoAyIdCg1MZWFkZXJSZXF1ZXN0EgwKBG5hbWUY",
            "ASABKAwiXAoOTGVhZGVyUmVzcG9uc2USLAoGaGVhZGVyGAEgASgLMhwuZXRj",
            "ZHNlcnZlcnBiLlJlc3BvbnNlSGVhZGVyEhwKAmt2GAIgASgLMhAubXZjY3Bi",
            "LktleVZhbHVlIjgKDVJlc2lnblJlcXVlc3QSJwoGbGVhZGVyGAEgASgLMhcu",
            "djNlbGVjdGlvbnBiLkxlYWRlcktleSI+Cg5SZXNpZ25SZXNwb25zZRIsCgZo",
            "ZWFkZXIYASABKAsyHC5ldGNkc2VydmVycGIuUmVzcG9uc2VIZWFkZXIiSQoP",
            "UHJvY2xhaW1SZXF1ZXN0EicKBmxlYWRlchgBIAEoCzIXLnYzZWxlY3Rpb25w",
            "Yi5MZWFkZXJLZXkSDQoFdmFsdWUYAiABKAwiQAoQUHJvY2xhaW1SZXNwb25z",
            "ZRIsCgZoZWFkZXIYASABKAsyHC5ldGNkc2VydmVycGIuUmVzcG9uc2VIZWFk",
            "ZXIy/AIKCEVsZWN0aW9uEksKCENhbXBhaWduEh0udjNlbGVjdGlvbnBiLkNh",
            "bXBhaWduUmVxdWVzdBoeLnYzZWxlY3Rpb25wYi5DYW1wYWlnblJlc3BvbnNl",
            "IgASSwoIUHJvY2xhaW0SHS52M2VsZWN0aW9ucGIuUHJvY2xhaW1SZXF1ZXN0",
            "Gh4udjNlbGVjdGlvbnBiLlByb2NsYWltUmVzcG9uc2UiABJFCgZMZWFkZXIS",
            "Gy52M2VsZWN0aW9ucGIuTGVhZGVyUmVxdWVzdBocLnYzZWxlY3Rpb25wYi5M",
            "ZWFkZXJSZXNwb25zZSIAEkgKB09ic2VydmUSGy52M2VsZWN0aW9ucGIuTGVh",
            "ZGVyUmVxdWVzdBocLnYzZWxlY3Rpb25wYi5MZWFkZXJSZXNwb25zZSIAMAES",
            "RQoGUmVzaWduEhsudjNlbGVjdGlvbnBiLlJlc2lnblJlcXVlc3QaHC52M2Vs",
            "ZWN0aW9ucGIuUmVzaWduUmVzcG9uc2UiAGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Etcdserverpb.RpcReflection.Descriptor, global::Mvccpb.KvReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::V3Electionpb.CampaignRequest), global::V3Electionpb.CampaignRequest.Parser, new[]{ "Name", "Lease", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::V3Electionpb.CampaignResponse), global::V3Electionpb.CampaignResponse.Parser, new[]{ "Header", "Leader" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::V3Electionpb.LeaderKey), global::V3Electionpb.LeaderKey.Parser, new[]{ "Name", "Key", "Rev", "Lease" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::V3Electionpb.LeaderRequest), global::V3Electionpb.LeaderRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::V3Electionpb.LeaderResponse), global::V3Electionpb.LeaderResponse.Parser, new[]{ "Header", "Kv" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::V3Electionpb.ResignRequest), global::V3Electionpb.ResignRequest.Parser, new[]{ "Leader" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::V3Electionpb.ResignResponse), global::V3Electionpb.ResignResponse.Parser, new[]{ "Header" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::V3Electionpb.ProclaimRequest), global::V3Electionpb.ProclaimRequest.Parser, new[]{ "Leader", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::V3Electionpb.ProclaimResponse), global::V3Electionpb.ProclaimResponse.Parser, new[]{ "Header" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CampaignRequest : pb::IMessage<CampaignRequest> {
    private static readonly pb::MessageParser<CampaignRequest> _parser = new pb::MessageParser<CampaignRequest>(() => new CampaignRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CampaignRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::V3Electionpb.ElectionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignRequest(CampaignRequest other) : this() {
      name_ = other.name_;
      lease_ = other.lease_;
      value_ = other.value_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignRequest Clone() {
      return new CampaignRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private pb::ByteString name_ = pb::ByteString.Empty;
    /// <summary>
    /// name is the election's identifier for the campaign.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lease" field.</summary>
    public const int LeaseFieldNumber = 2;
    private long lease_;
    /// <summary>
    /// lease is the ID of the lease attached to leadership of the election. If the
    /// lease expires or is revoked before resigning leadership, then the
    /// leadership is transferred to the next campaigner, if any.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Lease {
      get { return lease_; }
      set {
        lease_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 3;
    private pb::ByteString value_ = pb::ByteString.Empty;
    /// <summary>
    /// value is the initial proclaimed value set when the campaigner wins the
    /// election.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CampaignRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CampaignRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Lease != other.Lease) return false;
      if (Value != other.Value) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Lease != 0L) hash ^= Lease.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Name);
      }
      if (Lease != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Lease);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Value);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Name);
      }
      if (Lease != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Lease);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CampaignRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Lease != 0L) {
        Lease = other.Lease;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadBytes();
            break;
          }
          case 16: {
            Lease = input.ReadInt64();
            break;
          }
          case 26: {
            Value = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CampaignResponse : pb::IMessage<CampaignResponse> {
    private static readonly pb::MessageParser<CampaignResponse> _parser = new pb::MessageParser<CampaignResponse>(() => new CampaignResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CampaignResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::V3Electionpb.ElectionReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignResponse(CampaignResponse other) : this() {
      Header = other.header_ != null ? other.Header.Clone() : null;
      Leader = other.leader_ != null ? other.Leader.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CampaignResponse Clone() {
      return new CampaignResponse(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Etcdserverpb.ResponseHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Etcdserverpb.ResponseHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "leader" field.</summary>
    public const int LeaderFieldNumber = 2;
    private global::V3Electionpb.LeaderKey leader_;
    /// <summary>
    /// leader describes the resources used for holding leadereship of the election.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::V3Electionpb.LeaderKey Leader {
      get { return leader_; }
      set {
        leader_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CampaignResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CampaignResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(Leader, other.Leader)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (leader_ != null) hash ^= Leader.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (leader_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Leader);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (leader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Leader);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CampaignResponse other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          header_ = new global::Etcdserverpb.ResponseHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.leader_ != null) {
        if (leader_ == null) {
          leader_ = new global::V3Electionpb.LeaderKey();
        }
        Leader.MergeFrom(other.Leader);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (header_ == null) {
              header_ = new global::Etcdserverpb.ResponseHeader();
            }
            input.ReadMessage(header_);
            break;
          }
          case 18: {
            if (leader_ == null) {
              leader_ = new global::V3Electionpb.LeaderKey();
            }
            input.ReadMessage(leader_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LeaderKey : pb::IMessage<LeaderKey> {
    private static readonly pb::MessageParser<LeaderKey> _parser = new pb::MessageParser<LeaderKey>(() => new LeaderKey());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeaderKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::V3Electionpb.ElectionReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaderKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaderKey(LeaderKey other) : this() {
      name_ = other.name_;
      key_ = other.key_;
      rev_ = other.rev_;
      lease_ = other.lease_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaderKey Clone() {
      return new LeaderKey(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private pb::ByteString name_ = pb::ByteString.Empty;
    /// <summary>
    /// name is the election identifier that correponds to the leadership key.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 2;
    private pb::ByteString key_ = pb::ByteString.Empty;
    /// <summary>
    /// key is an opaque key representing the ownership of the election. If the key
    /// is deleted, then leadership is lost.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rev" field.</summary>
    public const int RevFieldNumber = 3;
    private long rev_;
    /// <summary>
    /// rev is the creation revision of the key. It can be used to test for ownership
    /// of an election during transactions by testing the key's creation revision
    /// matches rev.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Rev {
      get { return rev_; }
      set {
        rev_ = value;
      }
    }

    /// <summary>Field number for the "lease" field.</summary>
    public const int LeaseFieldNumber = 4;
    private long lease_;
    /// <summary>
    /// lease is the lease ID of the election leader.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Lease {
      get { return lease_; }
      set {
        lease_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeaderKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeaderKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Key != other.Key) return false;
      if (Rev != other.Rev) return false;
      if (Lease != other.Lease) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Rev != 0L) hash ^= Rev.GetHashCode();
      if (Lease != 0L) hash ^= Lease.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Name);
      }
      if (Key.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Key);
      }
      if (Rev != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Rev);
      }
      if (Lease != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Lease);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Name);
      }
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Key);
      }
      if (Rev != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Rev);
      }
      if (Lease != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Lease);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeaderKey other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Rev != 0L) {
        Rev = other.Rev;
      }
      if (other.Lease != 0L) {
        Lease = other.Lease;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadBytes();
            break;
          }
          case 18: {
            Key = input.ReadBytes();
            break;
          }
          case 24: {
            Rev = input.ReadInt64();
            break;
          }
          case 32: {
            Lease = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LeaderRequest : pb::IMessage<LeaderRequest> {
    private static readonly pb::MessageParser<LeaderRequest> _parser = new pb::MessageParser<LeaderRequest>(() => new LeaderRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeaderRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::V3Electionpb.ElectionReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaderRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaderRequest(LeaderRequest other) : this() {
      name_ = other.name_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaderRequest Clone() {
      return new LeaderRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private pb::ByteString name_ = pb::ByteString.Empty;
    /// <summary>
    /// name is the election identifier for the leadership information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeaderRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeaderRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Name);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Name);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeaderRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LeaderResponse : pb::IMessage<LeaderResponse> {
    private static readonly pb::MessageParser<LeaderResponse> _parser = new pb::MessageParser<LeaderResponse>(() => new LeaderResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeaderResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::V3Electionpb.ElectionReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaderResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaderResponse(LeaderResponse other) : this() {
      Header = other.header_ != null ? other.Header.Clone() : null;
      Kv = other.kv_ != null ? other.Kv.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaderResponse Clone() {
      return new LeaderResponse(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Etcdserverpb.ResponseHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Etcdserverpb.ResponseHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "kv" field.</summary>
    public const int KvFieldNumber = 2;
    private global::Mvccpb.KeyValue kv_;
    /// <summary>
    /// kv is the key-value pair representing the latest leader update.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mvccpb.KeyValue Kv {
      get { return kv_; }
      set {
        kv_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeaderResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeaderResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(Kv, other.Kv)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (kv_ != null) hash ^= Kv.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (kv_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Kv);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (kv_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Kv);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeaderResponse other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          header_ = new global::Etcdserverpb.ResponseHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.kv_ != null) {
        if (kv_ == null) {
          kv_ = new global::Mvccpb.KeyValue();
        }
        Kv.MergeFrom(other.Kv);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (header_ == null) {
              header_ = new global::Etcdserverpb.ResponseHeader();
            }
            input.ReadMessage(header_);
            break;
          }
          case 18: {
            if (kv_ == null) {
              kv_ = new global::Mvccpb.KeyValue();
            }
            input.ReadMessage(kv_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResignRequest : pb::IMessage<ResignRequest> {
    private static readonly pb::MessageParser<ResignRequest> _parser = new pb::MessageParser<ResignRequest>(() => new ResignRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResignRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::V3Electionpb.ElectionReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResignRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResignRequest(ResignRequest other) : this() {
      Leader = other.leader_ != null ? other.Leader.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResignRequest Clone() {
      return new ResignRequest(this);
    }

    /// <summary>Field number for the "leader" field.</summary>
    public const int LeaderFieldNumber = 1;
    private global::V3Electionpb.LeaderKey leader_;
    /// <summary>
    /// leader is the leadership to relinquish by resignation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::V3Electionpb.LeaderKey Leader {
      get { return leader_; }
      set {
        leader_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResignRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResignRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Leader, other.Leader)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (leader_ != null) hash ^= Leader.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (leader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Leader);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (leader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Leader);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResignRequest other) {
      if (other == null) {
        return;
      }
      if (other.leader_ != null) {
        if (leader_ == null) {
          leader_ = new global::V3Electionpb.LeaderKey();
        }
        Leader.MergeFrom(other.Leader);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (leader_ == null) {
              leader_ = new global::V3Electionpb.LeaderKey();
            }
            input.ReadMessage(leader_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResignResponse : pb::IMessage<ResignResponse> {
    private static readonly pb::MessageParser<ResignResponse> _parser = new pb::MessageParser<ResignResponse>(() => new ResignResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResignResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::V3Electionpb.ElectionReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResignResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResignResponse(ResignResponse other) : this() {
      Header = other.header_ != null ? other.Header.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResignResponse Clone() {
      return new ResignResponse(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Etcdserverpb.ResponseHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Etcdserverpb.ResponseHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResignResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResignResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResignResponse other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          header_ = new global::Etcdserverpb.ResponseHeader();
        }
        Header.MergeFrom(other.Header);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (header_ == null) {
              header_ = new global::Etcdserverpb.ResponseHeader();
            }
            input.ReadMessage(header_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProclaimRequest : pb::IMessage<ProclaimRequest> {
    private static readonly pb::MessageParser<ProclaimRequest> _parser = new pb::MessageParser<ProclaimRequest>(() => new ProclaimRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProclaimRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::V3Electionpb.ElectionReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProclaimRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProclaimRequest(ProclaimRequest other) : this() {
      Leader = other.leader_ != null ? other.Leader.Clone() : null;
      value_ = other.value_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProclaimRequest Clone() {
      return new ProclaimRequest(this);
    }

    /// <summary>Field number for the "leader" field.</summary>
    public const int LeaderFieldNumber = 1;
    private global::V3Electionpb.LeaderKey leader_;
    /// <summary>
    /// leader is the leadership hold on the election.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::V3Electionpb.LeaderKey Leader {
      get { return leader_; }
      set {
        leader_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private pb::ByteString value_ = pb::ByteString.Empty;
    /// <summary>
    /// value is an update meant to overwrite the leader's current value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProclaimRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProclaimRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Leader, other.Leader)) return false;
      if (Value != other.Value) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (leader_ != null) hash ^= Leader.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (leader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Leader);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Value);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (leader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Leader);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProclaimRequest other) {
      if (other == null) {
        return;
      }
      if (other.leader_ != null) {
        if (leader_ == null) {
          leader_ = new global::V3Electionpb.LeaderKey();
        }
        Leader.MergeFrom(other.Leader);
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (leader_ == null) {
              leader_ = new global::V3Electionpb.LeaderKey();
            }
            input.ReadMessage(leader_);
            break;
          }
          case 18: {
            Value = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProclaimResponse : pb::IMessage<ProclaimResponse> {
    private static readonly pb::MessageParser<ProclaimResponse> _parser = new pb::MessageParser<ProclaimResponse>(() => new ProclaimResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProclaimResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::V3Electionpb.ElectionReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProclaimResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProclaimResponse(ProclaimResponse other) : this() {
      Header = other.header_ != null ? other.Header.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProclaimResponse Clone() {
      return new ProclaimResponse(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Etcdserverpb.ResponseHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Etcdserverpb.ResponseHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProclaimResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProclaimResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProclaimResponse other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          header_ = new global::Etcdserverpb.ResponseHeader();
        }
        Header.MergeFrom(other.Header);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (header_ == null) {
              header_ = new global::Etcdserverpb.ResponseHeader();
            }
            input.ReadMessage(header_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
